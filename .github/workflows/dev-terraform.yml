name: Terraform Deployment

on:
  push:
    branches: 
      - 'dev'
  pull_request:
    branches: 
      - 'main'
    # paths-ignore:
    #   - '**/dev-terraform.yml'
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Confirm destroy of resources'
        required: true
        default: 'DESTROY'

env:
  AWS_REGION: ap-northeast-2

jobs:
  backend_infra:
    name: Provision Backend Resources
    runs-on: ubuntu-latest
    steps:
      - name: Checkout backend repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.TF_DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TF_DEV_AWS_SECRET_ACCESS_KEY }}   # 오타 여부 확인
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (Backend)
        working-directory: backend
        run: terraform init

      - name: Terraform Plan (Backend)
        working-directory: backend
        id: backend_plan
        run: |
          terraform plan -detailed-exitcode || exit_code=$? && echo "::set-output name=exitcode::$exit_code"

      - name: Terraform Apply (Backend)
        working-directory: backend
        if: steps.backend_plan.outputs.exitcode == '2'
        run: terraform apply -auto-approve

  main_infra:
    name: Deploy Dev Infrastructure
    runs-on: ubuntu-latest
    needs: backend_infra
    steps:
      - name: Checkout Dev repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init (Dev)
        working-directory: terraform_dev
        run: terraform init

      - name: Terraform Plan (Dev)
        working-directory: terraform_dev
        id: dev_plan
        run: |
          terraform plan -detailed-exitcode || exit_code=$? && echo "::set-output name=exitcode::$exit_code"

      - name: Terraform Apply (Dev)
        working-directory: terraform_dev
        if: steps.dev_plan.outputs.exitcode == '2'
        run: terraform apply -auto-approve
